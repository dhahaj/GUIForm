/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.tester;

import java.awt.Color;
import java.awt.EventQueue;
import java.awt.Font;
import java.awt.MenuItem;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.prefs.BackingStoreException;
import java.util.prefs.Preferences;
//import javafx.stage.FileChooser;
import javax.swing.JButton;
import javax.swing.JColorChooser;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JSlider;
import javax.swing.SwingUtilities;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.text.html.HTMLDocument;

/**
 *
 * @author dhahaj
 */
public class GUIFrame extends javax.swing.JFrame {

    public ButtonEvent buttonEvent;
    public static Preferences prefs;
//    public JMenuItem[] deviceMenuItems;

    public GUIFrame() {
        prefs = Preferences.userNodeForPackage(this.getClass());
        initComponents();
        testButton.setEnabled(false);
        pgmButton.setEnabled(false);
        slider.setValue(prefs.getInt("SLIDER_VALUE", slider.getValue()));
        textArea.setBackground(new Color(prefs.getInt("BKGD_CLR", 0)));
        textArea.setForeground(new Color(prefs.getInt("FRGD_CLR", 255)));
//        setUsers(users);
        rootPane.setDefaultButton(loginButton);
        getWindows()[0].addWindowListener(new WindowListener() {
            @Override
            public void windowOpened(WindowEvent e) {
            }

            @Override
            public void windowClosing(WindowEvent e) {
                int i = showYesNoDialog("Close Software?");
                if (i == JOptionPane.YES_OPTION) {
                    dispose();
                }
            }

            @Override
            public void windowClosed(WindowEvent e) {
                // showYesNoDialog(e.paramString());
            }

            @Override
            public void windowIconified(WindowEvent e) {
//                showYesNoDialog(e.paramString());
            }

            @Override
            public void windowDeiconified(WindowEvent e) {
                showYesNoDialog(e.paramString());
            }

            @Override
            public void windowActivated(WindowEvent e) {
//                showYesNoDialog(e.paramString());
            }

            @Override
            public void windowDeactivated(WindowEvent e) {
            }
        });
        deviceMenuItems = new JMenuItem[]{mi2500, mi2503, mi2504, mi2510, mi2513, mi2513, mi2514, mi2523, mi2524, mi2545};
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        jSplitPane1 = new javax.swing.JSplitPane();
        leftPanel = new javax.swing.JPanel();
        pgmButton = new javax.swing.JButton();
        testButton = new javax.swing.JButton();
        rightPanel = new javax.swing.JPanel();
        loginButton = new javax.swing.JButton();
        slider = new javax.swing.JSlider();
        userLabel = new javax.swing.JLabel();
        userComboBox = new javax.swing.JComboBox<>();
        deviceLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        slideLabel = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        miLogout = new javax.swing.JMenuItem();
        javax.swing.JPopupMenu.Separator jSeparator1 = new javax.swing.JPopupMenu.Separator();
        miQuit = new javax.swing.JMenuItem();
        mnDevice = new javax.swing.JMenu();
        mi2500 = new javax.swing.JMenuItem();
        mi2503 = new javax.swing.JMenuItem();
        mi2504 = new javax.swing.JMenuItem();
        mi2510 = new javax.swing.JMenuItem();
        mi2513 = new javax.swing.JMenuItem();
        mi2514 = new javax.swing.JMenuItem();
        mi2520 = new javax.swing.JMenuItem();
        mi2523 = new javax.swing.JMenuItem();
        mi2524 = new javax.swing.JMenuItem();
        mi2545 = new javax.swing.JMenuItem();
        mnSettings = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        mnAdmin = new javax.swing.JMenu();
        miFirmwareFolder = new javax.swing.JMenuItem();
        miAddUser = new javax.swing.JMenuItem();
        miRemoveUser = new javax.swing.JMenuItem();
        miEditConfig = new javax.swing.JMenuItem();
        miManualControl = new javax.swing.JMenuItem();

        FormListener formListener = new FormListener();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Tester Interface V2.0.1");
        setBackground(new java.awt.Color(204, 204, 204));
        setForeground(new java.awt.Color(102, 255, 102));
        setMinimumSize(new java.awt.Dimension(500, 600));
        addWindowListener(formListener);
        addKeyListener(formListener);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        textArea.setEditable(false);
        textArea.setColumns(20);
        textArea.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        textArea.setLineWrap(true);
        textArea.setRows(5);
        textArea.setText("TextArea");
        textArea.setFocusable(false);
        textArea.setMargin(new java.awt.Insets(10, 10, 10, 10));
        jScrollPane1.setViewportView(textArea);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jSplitPane1.setDividerLocation(200);
        jSplitPane1.setDividerSize(15);
        jSplitPane1.setPreferredSize(new java.awt.Dimension(773, 165));

        pgmButton.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        pgmButton.setText("Program");
        pgmButton.addActionListener(formListener);

        testButton.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        testButton.setText("Test");
        testButton.addActionListener(formListener);

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pgmButton, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                    .addComponent(testButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        leftPanelLayout.setVerticalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pgmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(testButton, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jSplitPane1.setLeftComponent(leftPanel);

        loginButton.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        loginButton.setText("Login");
        loginButton.addActionListener(formListener);

        slider.setMajorTickSpacing(25);
        slider.setMinimum(1);
        slider.setMinorTickSpacing(5);
        slider.setPaintTicks(true);
        slider.setSnapToTicks(true);
        slider.addInputMethodListener(formListener);

        userLabel.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        userLabel.setText("Not Logged In");

        userComboBox.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        userComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        deviceLabel.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        deviceLabel.setText("No Device Selected");

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel1.setText("Test Speed");

        slideLabel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        slideLabel.setText("50%");

        javax.swing.GroupLayout rightPanelLayout = new javax.swing.GroupLayout(rightPanel);
        rightPanel.setLayout(rightPanelLayout);
        rightPanelLayout.setHorizontalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rightPanelLayout.createSequentialGroup()
                        .addComponent(userLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(userComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rightPanelLayout.createSequentialGroup()
                        .addComponent(deviceLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rightPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(slideLabel)))
                .addContainerGap())
        );
        rightPanelLayout.setVerticalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rightPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(rightPanelLayout.createSequentialGroup()
                        .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(deviceLabel)
                            .addComponent(slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(slideLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(userComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(userLabel, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );

        jSplitPane1.setRightComponent(rightPanel);

        jPanel1.add(jSplitPane1, java.awt.BorderLayout.PAGE_END);

        jMenu1.setText("File");
        jMenu1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        miLogout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        miLogout.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        miLogout.setText("Logout");
        miLogout.setBorderPainted(false);
        miLogout.setHideActionText(true);
        miLogout.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        miLogout.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        miLogout.setIconTextGap(2);
        miLogout.setMargin(new java.awt.Insets(4, 4, 4, 4));
        jMenu1.add(miLogout);
        jMenu1.add(jSeparator1);

        miQuit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        miQuit.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        miQuit.setText("Quit");
        miQuit.setBorderPainted(false);
        miQuit.setHideActionText(true);
        miQuit.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        miQuit.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        miQuit.setIconTextGap(2);
        miQuit.setMargin(new java.awt.Insets(4, 4, 4, 4));
        miQuit.addActionListener(formListener);
        jMenu1.add(miQuit);

        jMenuBar1.add(jMenu1);

        mnDevice.setText("Device");
        mnDevice.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        mi2500.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        mi2500.setText("EAX2500");
        mnDevice.add(mi2500);

        mi2503.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        mi2503.setText("EAX2503");
        mnDevice.add(mi2503);

        mi2504.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        mi2504.setText("EAX2504");
        mnDevice.add(mi2504);

        mi2510.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        mi2510.setText("EAX2510");
        mnDevice.add(mi2510);

        mi2513.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        mi2513.setText("EAX2513");
        mnDevice.add(mi2513);

        mi2514.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        mi2514.setText("EAX2514");
        mnDevice.add(mi2514);

        mi2520.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        mi2520.setText("EAX2520");
        mnDevice.add(mi2520);

        mi2523.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        mi2523.setText("EAX2523");
        mnDevice.add(mi2523);

        mi2524.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        mi2524.setText("EAX2524");
        mnDevice.add(mi2524);

        mi2545.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        mi2545.setText("EAX2545");
        mnDevice.add(mi2545);

        jMenuBar1.add(mnDevice);

        mnSettings.setText("Settings");
        mnSettings.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jMenuItem4.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jMenuItem4.setText("Background Color");
        jMenuItem4.setBorderPainted(false);
        jMenuItem4.setHideActionText(true);
        jMenuItem4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jMenuItem4.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jMenuItem4.setIconTextGap(2);
        jMenuItem4.setMargin(new java.awt.Insets(4, 4, 4, 4));
        jMenuItem4.addActionListener(formListener);
        mnSettings.add(jMenuItem4);

        jMenuItem5.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jMenuItem5.setText("Text Color");
        jMenuItem5.setBorderPainted(false);
        jMenuItem5.setHideActionText(true);
        jMenuItem5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jMenuItem5.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jMenuItem5.setIconTextGap(2);
        jMenuItem5.setMargin(new java.awt.Insets(4, 4, 4, 4));
        jMenuItem5.addActionListener(formListener);
        mnSettings.add(jMenuItem5);

        jMenuItem6.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jMenuItem6.setText("Clear Screen");
        jMenuItem6.setBorderPainted(false);
        jMenuItem6.setHideActionText(true);
        jMenuItem6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jMenuItem6.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jMenuItem6.setIconTextGap(2);
        jMenuItem6.setMargin(new java.awt.Insets(4, 4, 4, 4));
        jMenuItem6.addActionListener(formListener);
        mnSettings.add(jMenuItem6);

        jMenuBar1.add(mnSettings);

        mnAdmin.setText("Admin");
        mnAdmin.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        miFirmwareFolder.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        miFirmwareFolder.setText("Set Firmware Folder");
        miFirmwareFolder.setBorderPainted(false);
        miFirmwareFolder.setHideActionText(true);
        miFirmwareFolder.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        miFirmwareFolder.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        miFirmwareFolder.setIconTextGap(2);
        miFirmwareFolder.setMargin(new java.awt.Insets(4, 4, 4, 4));
        miFirmwareFolder.addActionListener(formListener);
        mnAdmin.add(miFirmwareFolder);

        miAddUser.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        miAddUser.setText("Add User");
        miAddUser.setBorderPainted(false);
        miAddUser.setHideActionText(true);
        miAddUser.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        miAddUser.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        miAddUser.setIconTextGap(2);
        miAddUser.setMargin(new java.awt.Insets(4, 4, 4, 4));
        mnAdmin.add(miAddUser);

        miRemoveUser.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        miRemoveUser.setText("Remove User");
        miRemoveUser.setBorderPainted(false);
        miRemoveUser.setHideActionText(true);
        miRemoveUser.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        miRemoveUser.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        miRemoveUser.setIconTextGap(2);
        miRemoveUser.setMargin(new java.awt.Insets(4, 4, 4, 4));
        mnAdmin.add(miRemoveUser);

        miEditConfig.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        miEditConfig.setText("Edit Configuration File");
        miEditConfig.setBorderPainted(false);
        miEditConfig.setHideActionText(true);
        miEditConfig.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        miEditConfig.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        miEditConfig.setIconTextGap(2);
        miEditConfig.setMargin(new java.awt.Insets(4, 4, 4, 4));
        mnAdmin.add(miEditConfig);

        miManualControl.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        miManualControl.setText("Manual Control");
        miManualControl.setBorderPainted(false);
        miManualControl.setHideActionText(true);
        miManualControl.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        miManualControl.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        miManualControl.setIconTextGap(2);
        miManualControl.setMargin(new java.awt.Insets(4, 4, 4, 4));
        mnAdmin.add(miManualControl);

        jMenuBar1.add(mnAdmin);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.InputMethodListener, java.awt.event.KeyListener, java.awt.event.WindowListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == pgmButton) {
                GUIFrame.this.pgmButtonActionPerformed(evt);
            }
            else if (evt.getSource() == testButton) {
                GUIFrame.this.testButtonActionPerformed(evt);
            }
            else if (evt.getSource() == loginButton) {
                GUIFrame.this.loginButtonActionPerformed(evt);
            }
            else if (evt.getSource() == miQuit) {
                GUIFrame.this.miQuitActionPerformed(evt);
            }
            else if (evt.getSource() == jMenuItem4) {
                GUIFrame.this.jMenuItem4ActionPerformed(evt);
            }
            else if (evt.getSource() == jMenuItem5) {
                GUIFrame.this.jMenuItem5ActionPerformed(evt);
            }
            else if (evt.getSource() == jMenuItem6) {
                GUIFrame.this.jMenuItem6ActionPerformed(evt);
            }
            else if (evt.getSource() == miFirmwareFolder) {
                GUIFrame.this.miFirmwareFolderActionPerformed(evt);
            }
        }

        public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            if (evt.getSource() == slider) {
                GUIFrame.this.sliderEvent(evt);
            }
        }

        public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
        }

        public void keyPressed(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == GUIFrame.this) {
                GUIFrame.this.formKeyPressed(evt);
            }
        }

        public void keyReleased(java.awt.event.KeyEvent evt) {
        }

        public void keyTyped(java.awt.event.KeyEvent evt) {
        }

        public void windowActivated(java.awt.event.WindowEvent evt) {
        }

        public void windowClosed(java.awt.event.WindowEvent evt) {
            if (evt.getSource() == GUIFrame.this) {
                GUIFrame.this.formWindowClosed(evt);
            }
        }

        public void windowClosing(java.awt.event.WindowEvent evt) {
            if (evt.getSource() == GUIFrame.this) {
                GUIFrame.this.formWindowClosing(evt);
            }
        }

        public void windowDeactivated(java.awt.event.WindowEvent evt) {
        }

        public void windowDeiconified(java.awt.event.WindowEvent evt) {
        }

        public void windowIconified(java.awt.event.WindowEvent evt) {
        }

        public void windowOpened(java.awt.event.WindowEvent evt) {
        }
    }// </editor-fold>//GEN-END:initComponents

    private void pgmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pgmButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pgmButtonActionPerformed

    private void testButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_testButtonActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loginButtonActionPerformed

    private void miFirmwareFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miFirmwareFolderActionPerformed
        JFileChooser fc = new JFileChooser();
        File f = new File("");
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int i = fc.showDialog(rootPane, "OK");
        if (i == JFileChooser.APPROVE_OPTION) {
            prefs.put("FIRMWARE_DIR", fc.getSelectedFile().getAbsolutePath());
            System.out.println("Approved");
        }
    }//GEN-LAST:event_miFirmwareFolderActionPerformed

    private void sliderEvent(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_sliderEvent
        // TODO add your handling code here:
    }//GEN-LAST:event_sliderEvent

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        Color newColor = JColorChooser.showDialog(this, "Choose Background Color", textArea.getBackground());
        if (newColor != null) {
            textArea.setBackground(newColor);
            textArea.updateUI();
            prefs.putInt("BKGD_CLR", newColor.getRGB());
            try {
                prefs.flush();
                prefs.sync();
            } catch (BackingStoreException ex) {
                Logger.getLogger(GUIFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        Color newColor = JColorChooser.showDialog(this, "Choose Background Color", textArea.getBackground());
        if (newColor != null) {
            textArea.setForeground(newColor);
            textArea.updateUI();
            prefs.putInt("FRGD_CLR", newColor.getRGB());
            try {
                prefs.flush();
                prefs.sync();
            } catch (BackingStoreException ex) {
                Logger.getLogger(GUIFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void miQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miQuitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_miQuitActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        textArea.setText("");
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        new FormClosingEvent() {
            @Override
            public void FormClosing(ActionEvent evt) {
            }
        };
        //showYesNoDialog("Quit?");
        System.out.println(evt.paramString());
    }//GEN-LAST:event_formWindowClosing

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        String msg = "" + evt.getKeyChar();
        System.out.println(msg);
    }//GEN-LAST:event_formKeyPressed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        System.out.println(evt.paramString());    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new GUIFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel deviceLabel;
    javax.swing.JLabel jLabel1;
    javax.swing.JMenu jMenu1;
    javax.swing.JMenuBar jMenuBar1;
    public javax.swing.JMenuItem jMenuItem4;
    public javax.swing.JMenuItem jMenuItem5;
    public javax.swing.JMenuItem jMenuItem6;
    javax.swing.JPanel jPanel1;
    javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JSplitPane jSplitPane1;
    javax.swing.JPanel leftPanel;
    public javax.swing.JButton loginButton;
    public javax.swing.JMenuItem mi2500;
    public javax.swing.JMenuItem mi2503;
    public javax.swing.JMenuItem mi2504;
    public javax.swing.JMenuItem mi2510;
    public javax.swing.JMenuItem mi2513;
    public javax.swing.JMenuItem mi2514;
    public javax.swing.JMenuItem mi2520;
    public javax.swing.JMenuItem mi2523;
    public javax.swing.JMenuItem mi2524;
    public javax.swing.JMenuItem mi2545;
    public javax.swing.JMenuItem miAddUser;
    public javax.swing.JMenuItem miEditConfig;
    public javax.swing.JMenuItem miFirmwareFolder;
    public javax.swing.JMenuItem miLogout;
    public javax.swing.JMenuItem miManualControl;
    public javax.swing.JMenuItem miQuit;
    public javax.swing.JMenuItem miRemoveUser;
    javax.swing.JMenu mnAdmin;
    public javax.swing.JMenu mnDevice;
    javax.swing.JMenu mnSettings;
    public javax.swing.JButton pgmButton;
    javax.swing.JPanel rightPanel;
    public javax.swing.JLabel slideLabel;
    public javax.swing.JSlider slider;
    public javax.swing.JButton testButton;
    public static javax.swing.JTextArea textArea;
    public static javax.swing.JComboBox<String> userComboBox;
    public javax.swing.JLabel userLabel;
    // End of variables declaration//GEN-END:variables

    public JMenuItem[] deviceMenuItems;

    public void append(String s) {
        textArea.append(s + "\n");
    }

    /**
     * Interface to the control buttons
     */
    public interface ButtonEvent extends ActionListener {

        @Override
        public default void actionPerformed(ActionEvent e) {
            textArea.append(e.getActionCommand() + "\n");
            if (e.getSource() instanceof JButton) {
                if (((JButton) e.getSource()).getText().equalsIgnoreCase("login")) {
                    textArea.append((String) userComboBox.getSelectedItem());
                }
            } else if (e.getSource() instanceof MenuItem) {
                System.exit(0);
            }
        }
    }

    public interface SliderEvent extends ChangeListener {

        @Override
        public default void stateChanged(ChangeEvent e) {
            int value = ((JSlider) e.getSource()).getValue();
            //textArea.append("Slider Value: " + value + "\n");
            prefs.putInt("SLIDER_VALUE", value);
        }
    }

    public void addButtonListener(ActionListener al) {
        testButton.addActionListener(al);
        pgmButton.addActionListener(al);
        loginButton.addActionListener(al);
        miQuit.addActionListener(al);
    }

    /**
     * Sets the users for the combo box selection
     *
     * @param t A List or String array of user names.
     */
    public void setUsers(Object t) {
        if (t instanceof List) {
            userComboBox.removeAllItems();
            for (String s : (List<String>) t) {
                userComboBox.addItem(s);
            }
        } else if (t instanceof String[]) {
            userComboBox.removeAllItems();
            for (String s : (String[]) t) {
                userComboBox.addItem(s);
            }
        }
    }

    public static int showYesNoDialog(String msg) {
        return JOptionPane.showConfirmDialog(null, msg, "Confirm", JOptionPane.YES_NO_OPTION);
    }

    public static interface FormClosingEvent {

        public void FormClosing(ActionEvent evt);
    }

    public static String readFile(String path) {
        String line = null;
        StringBuilder sb = new StringBuilder();
        BufferedReader br = null;
        try {
            FileReader fr = new FileReader(path);
            br = new BufferedReader(fr);
            while ((line = br.readLine()) != null) {
                sb.append(line + "\n");
            }
        } catch (IOException e) {
            return null;
        } finally {
            try {
                br.close();
            } catch (IOException ex) {
            }
        }
        return sb.toString();
    }
}
